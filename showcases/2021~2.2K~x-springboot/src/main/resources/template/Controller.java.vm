package ${package}.${moduleName}.controller;

import java.util.Map;
import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.RequestBody;
import ${package}.${moduleName}.entity.${className};
import ${package}.${moduleName}.service.${className}Service;
import com.suke.czx.common.utils.R;
import lombok.AllArgsConstructor;
import com.suke.czx.common.annotation.SysLog;
import com.suke.czx.common.base.AbstractController;
import org.springframework.security.access.prepost.PreAuthorize;
import java.util.Arrays;



/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@AllArgsConstructor
@RequestMapping("/${moduleName}/${pathName}")
public class ${className}Controller  extends AbstractController {
    private final  ${className}Service ${classname}Service;

    /**
     * 列表
     */
    @RequestMapping("/list")
    @PreAuthorize("hasRole('${moduleName}:${pathName}:list')")
    public R list(@RequestParam Map<String, Object> params){
        //查询列表数据
        QueryWrapper<${className}> queryWrapper = new QueryWrapper<>();
        IPage<${className}> sysConfigList = ${classname}Service.page(mpPageConvert.<${className}>pageParamConvert(params),queryWrapper);
        return R.ok().put("page", mpPageConvert.pageValueConvert(sysConfigList));
    }


    /**
     * 信息
     */
    @RequestMapping("/info/{${pk.attrNameMin}}")
    @PreAuthorize("hasRole('${moduleName}:${pathName}:info')")
    public R info(@PathVariable("${pk.attrNameMin}") ${pk.attrType} ${pk.attrNameMin}){
        return R.ok().put("${classname}", ${classname}Service.getById(${pk.attrNameMin}));
    }


    /**
     * 新增${comments}
     */
    @SysLog("新增${comments}数据")
    @RequestMapping("/save")
    @PreAuthorize("hasRole('${moduleName}:${pathName}:save')")
    public R save(@RequestBody ${className} ${classname}){
        ${classname}Service.save(${classname});
        return R.ok();
    }


    /**
     * 修改
     */
    @SysLog("修改${comments}数据")
    @RequestMapping("/update")
    @PreAuthorize("hasRole('${moduleName}:${pathName}:update')")
    public R update(@RequestBody ${className} ${classname}){
		${classname}Service.updateById(${classname});
        return R.ok();
    }


    /**
     * 删除
     */
    @SysLog("删除${comments}数据")
    @RequestMapping("/delete")
    @PreAuthorize("hasRole('${moduleName}:${pathName}:delete')")
    public R delete(@RequestBody ${pk.attrType}[] ${pk.attrNameMin}s){
		${classname}Service.removeByIds(Arrays.asList(${pk.attrNameMin}s));
        return R.ok();
    }
	
}
