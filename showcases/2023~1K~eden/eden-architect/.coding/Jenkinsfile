pipeline {
  agent any
	environment {
	  CODING_MAVEN_SNAPSHOTS_NAME = "maven-snapshots"
		CODING_MAVEN_SNAPSHOTS_ID = "${CCI_CURRENT_TEAM}-${PROJECT_NAME}-${CODING_MAVEN_SNAPSHOTS_NAME}"
    CODING_MAVEN_SNAPSHOTS_URL = "${CCI_CURRENT_WEB_PROTOCOL}://${CCI_CURRENT_TEAM}-maven.pkg.${CCI_CURRENT_DOMAIN}/repository/${PROJECT_NAME}/${CODING_MAVEN_SNAPSHOTS_NAME}/"

	  CODING_MAVEN_RELEASES_NAME = "maven-releases"
		CODING_MAVEN_RELEASES_ID = "${CCI_CURRENT_TEAM}-${PROJECT_NAME}-${CODING_MAVEN_RELEASES_NAME}"
    CODING_MAVEN_RELEASES_URL = "${CCI_CURRENT_WEB_PROTOCOL}://${CCI_CURRENT_TEAM}-maven.pkg.${CCI_CURRENT_DOMAIN}/repository/${PROJECT_NAME}/${CODING_MAVEN_RELEASES_NAME}/"
	}
  stages {
    stage('检出') {
      steps {
        checkout([$class: 'GitSCM',
        branches: [[name: GIT_BUILD_REF]],
        userRemoteConfigs: [[
          url: GIT_REPO_URL,
          credentialsId: CREDENTIALS_ID
        ]]])
      }
    }
    stage('编译') {
      steps {
        script {
          CODING_ARTIFACT_VERSION = "2.4.13-SNAPSHOT"
        }
				withEnv([
					"CODING_ARTIFACT_VERSION=${CODING_ARTIFACT_VERSION}",
					"CODING_MAVEN_RELEASES_ID=${CODING_MAVEN_RELEASES_ID}",
					"CODING_MAVEN_RELEASES_URL=${CODING_MAVEN_RELEASES_URL}",
					"CODING_MAVEN_RELEASES_USERNAME=${CODING_MAVEN_RELEASES_USERNAME}",
          "CODING_MAVEN_RELEASES_PASSWORD=${CODING_MAVEN_RELEASES_PASSWORD}",
          "CODING_MAVEN_SNAPSHOTS_ID=${CODING_MAVEN_SNAPSHOTS_ID}",
          "CODING_MAVEN_SNAPSHOTS_URL=${CODING_MAVEN_SNAPSHOTS_URL}",
          "CODING_MAVEN_SNAPSHOTS_USERNAME=${CODING_MAVEN_SNAPSHOTS_USERNAME}",
          "CODING_MAVEN_SNAPSHOTS_PASSWORD=${CODING_MAVEN_SNAPSHOTS_PASSWORD}"
				]) {
					sh 'mvn -Pcoding versions:set -DnewVersion=${CODING_ARTIFACT_VERSION} clean package -T 4C -DskipTests -s ./.coding/settings.xml'
				}
      }
    }
    stage('单元测试') {
			steps {
				withEnv([
						"CODING_MAVEN_RELEASES_ID=${CODING_MAVEN_RELEASES_ID}",
						"CODING_MAVEN_RELEASES_URL=${CODING_MAVEN_RELEASES_URL}",
						"CODING_MAVEN_RELEASES_USERNAME=${CODING_MAVEN_RELEASES_USERNAME}",
						"CODING_MAVEN_RELEASES_PASSWORD=${CODING_MAVEN_RELEASES_PASSWORD}",
						"CODING_MAVEN_SNAPSHOTS_ID=${CODING_MAVEN_SNAPSHOTS_ID}",
						"CODING_MAVEN_SNAPSHOTS_URL=${CODING_MAVEN_SNAPSHOTS_URL}",
						"CODING_MAVEN_SNAPSHOTS_USERNAME=${CODING_MAVEN_SNAPSHOTS_USERNAME}",
						"CODING_MAVEN_SNAPSHOTS_PASSWORD=${CODING_MAVEN_SNAPSHOTS_PASSWORD}"
				]) {
					sh 'mvn -Pcoding,unit-test test -s ./.coding/settings.xml'
				}
      }
			post {
				always {
           junit '**/surefire-reports/*.xml'
//            codingHtmlReport(name: 'eden-commons-jacoco-reports', tag: '代码覆盖率报告', path: 'eden-components/eden-commons/target/site/jacoco', entryFile: 'index.html')
//            codingHtmlReport(name: 'eden-spring-cloud-jacoco-reports', tag: '代码覆盖率报告', path: 'eden-components/eden-spring-cloud/target/site/jacoco', entryFile: 'index.html')
//            codingHtmlReport(name: 'eden-spring-data-jacoco-reports', tag: '代码覆盖率报告', path: 'eden-components/eden-spring-data/target/site/jacoco', entryFile: 'index.html')
//            codingHtmlReport(name: 'eden-spring-framework-jacoco-reports', tag: '代码覆盖率报告', path: 'eden-components/eden-spring-framework/target/site/jacoco', entryFile: 'index.html')
           codingHtmlReport(name: 'eden-spring-integration-jacoco-reports', tag: '代码覆盖率报告', path: 'eden-components/eden-spring-integration/target/site/jacoco', entryFile: 'index.html')
//            codingHtmlReport(name: 'eden-spring-security-jacoco-reports', tag: '代码覆盖率报告', path:'eden-components/eden-spring-security/target/site/jacoco', entryFile: 'index.html')
           codingHtmlReport(name: 'eden-spring-test-jacoco-reports', tag: '代码覆盖率报告', path:'eden-components/eden-spring-test/target/site/jacoco', entryFile: 'index.html')
        }
			}
    }
    stage('推送到 Maven 制品库') {
      steps {
				withEnv([
						"CODING_MAVEN_RELEASES_ID=${CODING_MAVEN_RELEASES_ID}",
						"CODING_MAVEN_RELEASES_URL=${CODING_MAVEN_RELEASES_URL}",
						"CODING_MAVEN_RELEASES_USERNAME=${CODING_MAVEN_RELEASES_USERNAME}",
						"CODING_MAVEN_RELEASES_PASSWORD=${CODING_MAVEN_RELEASES_PASSWORD}",
						"CODING_MAVEN_SNAPSHOTS_ID=${CODING_MAVEN_SNAPSHOTS_ID}",
						"CODING_MAVEN_SNAPSHOTS_URL=${CODING_MAVEN_SNAPSHOTS_URL}",
						"CODING_MAVEN_SNAPSHOTS_USERNAME=${CODING_MAVEN_SNAPSHOTS_USERNAME}",
						"CODING_MAVEN_SNAPSHOTS_PASSWORD=${CODING_MAVEN_SNAPSHOTS_PASSWORD}"
				]) {
					sh 'mvn -Pcoding deploy -DskipTests -s ./.coding/settings.xml'
				}
      }
    }
  }
}
