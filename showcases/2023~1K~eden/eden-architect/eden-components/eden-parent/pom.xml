<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012-2019 the original author or authors.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~      https://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ylzl</groupId>
		<artifactId>eden-dependencies</artifactId>
		<version>2.4.13-SNAPSHOT</version>
		<relativePath>../eden-dependencies/pom.xml</relativePath>
	</parent>
	<artifactId>eden-parent</artifactId>
	<packaging>pom</packaging>
	<name>eden-parent</name>
	<description>通用父工程</description>

	<properties>
		<!-- 基础属性 -->
		<maven.version>3.0.0</maven.version>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<timestamp>${maven.build.timestamp}</timestamp>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.testresult.directory>${project.build.directory}/test-results</project.testresult.directory>
		<spring.profiles.active/>
		<!-- 清除编译目录 -->
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<!-- 编译代码 -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<!-- 依赖管理 -->
		<maven-dependency-plugin.version>3.1.1</maven-dependency-plugin.version>
		<dependency-check-maven.version>3.3.1</dependency-check-maven.version>
		<!-- 资源管理 -->
		<maven-source-plugin.version.version>3.2.1</maven-source-plugin.version.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<build-helper-maven-plugin.version>3.0.0</build-helper-maven-plugin.version>
		<!-- 打包成可执行程序 -->
		<spring-boot-maven-plugin.version>2.4.13</spring-boot-maven-plugin.version>
		<start-class/>
		<build.layers.enabled>false</build.layers.enabled>
		<maven-assembly-plugin.version>3.2.0</maven-assembly-plugin.version>
		<maven-jar-plugin.version>3.1.2</maven-jar-plugin.version>
		<maven-war-plugin.version>3.2.3</maven-war-plugin.version>
		<maven-shade-plugin.version>3.2.1</maven-shade-plugin.version>
		<frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
		<node.version>v8.11.3</node.version>
		<yarn.version>v1.9.2</yarn.version>
		<!-- 安装到本地制品库-->
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<!-- 部署到远程制品库 -->
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<!-- 代码覆盖率 -->
		<jacoco-maven-plugin.version>0.8.7</jacoco-maven-plugin.version>
		<!-- 代码质量 -->
		<sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
		<!-- 单元测试 -->
		<maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
		<junit-jupiter-engine.version>5.7.2</junit-jupiter-engine.version>
		<!-- 集成测试 -->
		<maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
		<redis-maven-plugin.version>1.4.6</redis-maven-plugin.version>
		<!-- 性能测试 -->
		<gatling-maven-plugin.version>3.0.3</gatling-maven-plugin.version>
		<gatling.configFolder>${project.basedir}/src/test/gatling/conf</gatling.configFolder>
		<!-- 版本管理 -->
		<versions-maven-plugin.version>2.7</versions-maven-plugin.version>
		<git-commit-id-plugin.version>4.9.10</git-commit-id-plugin.version>
		<git-changelog-maven-plugin.version>1.95.2</git-changelog-maven-plugin.version>
		<!-- Ant 构建工具 -->
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<!-- 项目脚手架 -->
		<archetype-packaging.version>3.2.0</archetype-packaging.version>
		<maven-archetype-plugin.version>3.2.0</maven-archetype-plugin.version>
		<!-- Docker 部署 -->
		<jib-maven-plugin.version>2.2.0</jib-maven-plugin.version>
		<dockerfile-maven-plugin.version>1.4.3</dockerfile-maven-plugin.version>
		<docker.image/>
		<docker.username/>
		<docker.password/>
		<!-- J2EE 部署 -->
		<cargo-maven2-plugin.version>1.7.9</cargo-maven2-plugin.version>
		<!-- 数据库迁移工具 -->
		<liquibase-maven-plugin.version>3.5.5</liquibase-maven-plugin.version>
		<liquibase.domain/>
		<liquibase-hibernate5.version>3.8</liquibase-hibernate5.version>
		<spring.datasource.driver/>
		<spring.datasource.url/>
		<spring.datasource.username/>
		<spring.datasource.password/>
		<spring.jpa.database-platform/>
		<spring.jpa.naming.physical-strategy/>
		<spring.jpa.naming.implicit-strategy/>
		<validation-api.version>1.1.0.Final</validation-api.version>
		<flyway-maven-plugin.version>${flyway.version}</flyway-maven-plugin.version>
		<!-- OpenAPI 生成工具 -->
		<openapi-generator-maven-plugin.version>5.2.1</openapi-generator-maven-plugin.version>
		<openapi-generator-maven-plugin.apiPackage/>
		<openapi-generator-maven-plugin.modelPackage/>
		<!-- OpenAPI 文档生成工具 -->
		<asciidoctor-maven-plugin.version>1.5.3</asciidoctor-maven-plugin.version>
		<asciidoctor.generated.directory>${project.build.directory}/asciidoc/generated</asciidoctor.generated.directory>
		<asciidoctor.html.output.directory>${project.build.directory}/asciidoc/html</asciidoctor.html.output.directory>
		<asciidoctor.input.directory>${project.basedir}/src/docs/asciidoc</asciidoctor.input.directory>
		<asciidoctor.pdf.output.directory>${project.build.directory}/asciidoc/pdf</asciidoctor.pdf.output.directory>
		<asciidoctorj-diagram.version>1.5.18</asciidoctorj-diagram.version>
		<asciidoctorj-pdf.version>1.5.0-alpha.10.1</asciidoctorj-pdf.version>
		<swagger2markup-maven-plugin.version>1.3.7</swagger2markup-maven-plugin.version>
		<swagger2markup-extensions.version>1.3.3</swagger2markup-extensions.version>
		<swagger.input>${server.url}/v2/api-docs</swagger.input>
		<swagger.output.dir>${project.build.directory}/swagger</swagger.output.dir>
		<swagger.snippetOutput.dir>${project.build.directory}/asciidoc/snippets</swagger.snippetOutput.dir>
		<server.url/>
		<!-- Protobuf 工具 -->
		<protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
		<!-- 属性解析工具 -->
		<os-maven-plugin.version>1.6.2</os-maven-plugin.version>
		<yaml-properties-maven-plugin.version>1.1.3</yaml-properties-maven-plugin.version>
		<properties-maven-plugin.version>1.1.0</properties-maven-plugin.version>
		<xml-maven-plugin.version>1.0.2</xml-maven-plugin.version>
		<!-- 其他编程语言 -->
		<scala-maven-plugin.version>3.4.6</scala-maven-plugin.version>
		<kotlin-maven-plugin.version>${kotlin.version}</kotlin-maven-plugin.version>
		<gmavenplus-plugin.version>2.1.0</gmavenplus-plugin.version>
		<groovy-maven-plugin.version>2.1.1</groovy-maven-plugin.version>
		<!-- 其他 -->
		<maven-help-plugin.version>3.2.0</maven-help-plugin.version>
		<maven-javadoc-plugin.version>3.1.1</maven-javadoc-plugin.version>
		<maven-site-plugin.version>3.8.2</maven-site-plugin.version>
		<maven-enforcer-plugin.version>3.0.0</maven-enforcer-plugin.version>
		<maven-idea-plugin.version>2.2.1</maven-idea-plugin.version>
		<maven-invoker-plugin.version>3.2.1</maven-invoker-plugin.version>
		<maven-project-info-reports-plugin.version>3.0.0</maven-project-info-reports-plugin.version>
		<flatten-maven-plugin.version>1.1.0</flatten-maven-plugin.version>
		<exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>
		<git-commit-id-plugin.version>3.0.1</git-commit-id-plugin.version>
		<infinispan-protocol-parser-generator-maven-plugin.version>${infinispan.version}
		</infinispan-protocol-parser-generator-maven-plugin.version>
		<javassist.version>3.26.0-GA</javassist.version>
		<johnzon-maven-plugin.version>${johnzon.version}</johnzon-maven-plugin.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Spring Framework 依赖 -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${spring-framework.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Data 依赖 -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-bom</artifactId>
				<version>${spring-data-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Integration 依赖 -->
			<dependency>
				<groupId>org.springframework.integration</groupId>
				<artifactId>spring-integration-bom</artifactId>
				<version>${spring-integration.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Security 依赖 -->
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-bom</artifactId>
				<version>${spring-security.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Session 依赖 -->
			<dependency>
				<groupId>org.springframework.session</groupId>
				<artifactId>spring-session-bom</artifactId>
				<version>${spring-session-bom.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Cloud 依赖 -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- Spring Cloud Alibaba 依赖 -->
			<dependency>
				<groupId>com.alibaba.cloud</groupId>
				<artifactId>spring-cloud-alibaba-dependencies</artifactId>
				<version>${spring-cloud-alibaba.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<defaultGoal>spring-boot:run</defaultGoal>
		<finalName>${project.name}</finalName>
		<testResources>
			<testResource>
				<directory>src/test/java</directory>
			</testResource>
			<testResource>
				<directory>src/test/groovy</directory>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		<extensions>
			<extension>
				<groupId>kr.motd.maven</groupId>
				<artifactId>os-maven-plugin</artifactId>
				<version>${os-maven-plugin.version}</version>
			</extension>
		</extensions>
		<pluginManagement>
			<!-- 相同的 phase 按引入顺序执行 -->
			<plugins>
				<!-- 编译代码 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<annotationProcessorPaths>
							<path>
								<groupId>org.hibernate</groupId>
								<artifactId>hibernate-jpamodelgen</artifactId>
								<version>${hibernate.version}</version>
							</path>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${lombok.version}</version>
							</path>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${mapstruct.version}</version>
							</path>
							<path>
								<groupId>org.springframework.boot</groupId>
								<artifactId>spring-boot-configuration-processor</artifactId>
								<version>${spring-boot.version}</version>
							</path>
							<path>
								<groupId>org.openjdk.jmh</groupId>
								<artifactId>jmh-generator-annprocess</artifactId>
								<version>${jmh.version}</version>
							</path>
						</annotationProcessorPaths>
						<source>${java.version}</source>
						<target>${java.version}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
						<showWarnings>false</showWarnings>
						<compilerArgs>
							<arg>-Xlint</arg>
						</compilerArgs>
					</configuration>
				</plugin>
				<!-- 资源管理 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<executions>
						<execution>
							<id>resources-copy-resources</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>target/classes
								</outputDirectory>
								<useDefaultDelimiters>false
								</useDefaultDelimiters>
								<delimiters>
									<delimiter>#</delimiter>
								</delimiters>
								<resources>
									<resource>
										<directory>src/main/resources
										</directory>
										<filtering>true</filtering>
										<includes>
											<include>**/*.properties</include>
											<exclude>**/*.yml</exclude>
										</includes>
									</resource>
									<resource>
										<directory>src/main/resources
										</directory>
										<filtering>false</filtering>
										<excludes>
											<exclude>**/*.properties</exclude>
											<exclude>**/*.yml</exclude>
										</excludes>
									</resource>
								</resources>
							</configuration>
						</execution>
						<execution>
							<id>resources-docker-resources</id>
							<phase>process-resources</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>target/</outputDirectory>
								<resources>
									<resource>
										<directory>src/main/docker</directory>
										<filtering>false</filtering>
										<excludes>
											<exclude>**/*.yml</exclude>
										</excludes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- 代码覆盖率 -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
					<configuration>
						<rules>
							<rule implementation="org.jacoco.maven.RuleConfiguration">
								<element>BUNDLE</element>
								<limits>
									<limit implementation="org.jacoco.report.check.Limit">
										<counter>BRANCH</counter>
										<value>COVEREDRATIO</value>
										<minimum>0.50</minimum>
									</limit>
									<limit implementation="org.jacoco.report.check.Limit">
										<counter>METHOD</counter>
										<value>COVEREDRATIO</value>
										<minimum>0.50</minimum>
									</limit>
									<limit implementation="org.jacoco.report.check.Limit">
										<counter>CLASS</counter>
										<value>MISSEDCOUNT</value>
										<maximum>0</maximum>
									</limit>
								</limits>
							</rule>
						</rules>
					</configuration>
				</plugin>
				<!-- 代码分析 -->
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
				<!-- 单元测试 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<!-- 集成测试 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<includes>
							<include>**/*IT</include>
							<include>**/*ITCase</include>
						</includes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>ru.trylogic.maven.plugins</groupId>
					<artifactId>redis-maven-plugin</artifactId>
					<version>${redis-maven-plugin.version}</version>
					<configuration>
						<forked>true</forked>
					</configuration>
					<executions>
						<execution>
							<id>start-redis</id>
							<phase>pre-integration-test</phase>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
						<execution>
							<id>stop-redis</id>
							<phase>post-integration-test</phase>
							<goals>
								<goal>shutdown</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 性能测试 -->
				<plugin>
					<groupId>io.gatling</groupId>
					<artifactId>gatling-maven-plugin</artifactId>
					<version>${gatling-maven-plugin.version}</version>
					<configuration>
						<disableCompiler>true</disableCompiler>
						<propagateSystemProperties>true
						</propagateSystemProperties>
						<failOnError>true</failOnError>
						<runMultipleSimulations>true</runMultipleSimulations>
					</configuration>
				</plugin>
				<!-- 版本管理 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
					<configuration>
						<generateBackupPoms>false</generateBackupPoms>
					</configuration>
				</plugin>
				<!-- 版本提交信息 -->
				<plugin>
					<groupId>pl.project13.maven</groupId>
					<artifactId>git-commit-id-plugin</artifactId>
					<version>${git-commit-id-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>revision</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<failOnNoGitDirectory>false</failOnNoGitDirectory>
						<failOnUnableToExtractRepoInfo>false</failOnUnableToExtractRepoInfo>
						<generateGitPropertiesFile>true</generateGitPropertiesFile>
						<includeOnlyProperties>
							<includeOnlyProperty>^git.commit.id.abbrev$</includeOnlyProperty>
							<includeOnlyProperty>^git.commit.id.describe$</includeOnlyProperty>
							<includeOnlyProperty>^git.branch$</includeOnlyProperty>
						</includeOnlyProperties>
					</configuration>
				</plugin>
				<!-- 版本变更记录 -->
				<plugin>
					<groupId>se.bjurr.gitchangelog</groupId>
					<artifactId>git-changelog-maven-plugin</artifactId>
					<version>${git-changelog-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>GenerateGitChangelog</id>
							<phase>generate-sources</phase>
							<goals>
								<goal>git-changelog</goal>
							</goals>
							<configuration>
								<templateContent>
<![CDATA[
{{#tags}}
## {{name}}
 {{#issues}}
  {{#hasIssue}}
   {{#hasLink}}
### {{name}} [{{issue}}]({{link}}) {{title}} {{#hasIssueType}} *{{issueType}}* {{/hasIssueType}} {{#hasLabels}} {{#labels}} *{{.}}* {{/labels}} {{/hasLabels}}
   {{/hasLink}}
   {{^hasLink}}
### {{name}} {{issue}} {{title}} {{#hasIssueType}} *{{issueType}}* {{/hasIssueType}} {{#hasLabels}} {{#labels}} *{{.}}* {{/labels}} {{/hasLabels}}
   {{/hasLink}}
  {{/hasIssue}}
  {{^hasIssue}}
### {{name}}
  {{/hasIssue}}

  {{#commits}}
**{{{messageTitle}}}**

{{#messageBodyItems}}
 * {{.}}
{{/messageBodyItems}}

[{{hash}}](https://github.com/{{ownerName}}/{{repoName}}/commit/{{hash}}) {{authorName}} *{{commitTime}}*

  {{/commits}}

 {{/issues}}
{{/tags}}
]]>
								</templateContent>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- 打包成可执行程序 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<configuration>
						<ignoreMissingDescriptor>true</ignoreMissingDescriptor>
						<descriptors>
							<descriptor>src/main/assembly/assembly.xml
							</descriptor>
						</descriptors>
					</configuration>
					<executions>
						<execution>
							<id>assembly-single</id>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 部署到本地制品库 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<!-- 部署到远程制品库 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
					<configuration>
						<updateReleaseInfo>true</updateReleaseInfo>
					</configuration>
				</plugin>
				<!-- 容器化部署 -->
				<plugin>
					<groupId>com.google.cloud.tools</groupId>
					<artifactId>jib-maven-plugin</artifactId>
					<version>${jib-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
					<configuration>
						<repository>${project.name}</repository>
						<tag>${project.version}</tag>
						<contextDirectory>${project.build.directory}</contextDirectory>
					</configuration>
				</plugin>
				<!-- 打包成可执行程序 -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot-maven-plugin.version}</version>
					<configuration>
						<executable>true</executable>
						<fork>true</fork>
						<mainClass>${start-class}</mainClass>
						<includeSystemScope>true</includeSystemScope>
						<layers>
							<enabled>${build.layers.enabled}</enabled>
							<includeLayerTools>true</includeLayerTools>
							<configuration>${project.basedir}/src/main/docker/layers.xml</configuration>
						</layers>
					</configuration>
					<executions>
						<execution>
							<id>spring-boot-build-info</id>
							<phase>compile</phase>
							<goals>
								<goal>build-info</goal>
							</goals>
						</execution>
						<execution>
							<id>spring-boot-repackage</id>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>**/rebel.xml</exclude>
						</excludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${maven-war-plugin.version}</version>
					<configuration>
						<failOnMissingWebXml>false</failOnMissingWebXml>
						<archive>
							<manifest>
								<mainClass>${start-class}</mainClass>
								<addDefaultImplementationEntries>true
								</addDefaultImplementationEntries>
							</manifest>
						</archive>
						<packagingExcludes>WEB-INF/lib/*.jar</packagingExcludes>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<!-- 项目脚手架 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-archetype-plugin</artifactId>
					<version>${maven-archetype-plugin.version}</version>
					<configuration>
						<propertyFile>archetype.properties</propertyFile>
					</configuration>
				</plugin>
				<!-- 属性解析工具 -->
				<plugin>
					<groupId>it.ozimov</groupId>
					<artifactId>yaml-properties-maven-plugin</artifactId>
					<version>${yaml-properties-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>yaml-read-project-properties</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>read-project-properties</goal>
							</goals>
							<configuration>
								<files>
									<file>
										${project.build.outputDirectory}/config/application-${spring.profiles.active}.yml
									</file>
								</files>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- 数据库迁移工具 -->
				<plugin>
					<groupId>org.flywaydb</groupId>
					<artifactId>flyway-maven-plugin</artifactId>
					<version>${flyway-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.liquibase</groupId>
					<artifactId>liquibase-maven-plugin</artifactId>
					<version>${liquibase-maven-plugin.version}</version>
					<configuration>
						<changeLogFile>
							src/main/resources/config/liquibase/master.xml
						</changeLogFile>
						<outputChangeLogFile>
							src/main/resources/config/liquibase/changelog/${maven.build.timestamp}.xml
						</outputChangeLogFile>
						<diffChangeLogFile>
							src/main/resources/config/liquibase/changelog/${maven.build.timestamp}.xml
						</diffChangeLogFile>
						<driver>${spring.datasource.driver}</driver>
						<url>${spring.datasource.url}</url>
						<username>${spring.datasource.username}</username>
						<password>${spring.datasource.password}</password>
						<referenceUrl>
							hibernate:spring:${liquibase.domain}?dialect=${spring.jpa.database-platform}&amp;hibernate.physical_naming_strategy=${spring.jpa.naming.physical-strategy}&amp;hibernate.implicit_naming_strategy=${spring.jpa.naming.implicit-strategy}
						</referenceUrl>
						<verbose>true</verbose>
						<logging>debug</logging>
						<contexts>!test</contexts>
					</configuration>
					<executions>
						<execution>
							<id>liquibase-dbDoc</id>
							<phase>pre-site</phase>
							<goals>
								<goal>dbDoc</goal>
							</goals>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>org.javassist</groupId>
							<artifactId>javassist</artifactId>
							<version>${javassist.version}</version>
						</dependency>
						<dependency>
							<groupId>org.liquibase</groupId>
							<artifactId>liquibase-core</artifactId>
							<version>${liquibase.version}</version>
						</dependency>
						<dependency>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-starter-data-jpa
							</artifactId>
						</dependency>
						<dependency>
							<groupId>javax.validation</groupId>
							<artifactId>validation-api</artifactId>
							<version>${validation-api.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<!-- Javadoc -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${maven-javadoc-plugin.version}</version>
					<configuration>
						<source>8</source>
					</configuration>
					<executions>
						<execution>
							<id>javadoc-jar</id>
							<phase>pre-site</phase>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- 部署到 J2EE 容器 -->
				<plugin>
					<groupId>org.codehaus.cargo</groupId>
					<artifactId>cargo-maven2-plugin</artifactId>
					<version>${cargo-maven2-plugin.version}</version>
				</plugin>
				<!-- 其他编程语言支持 -->
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>${scala-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>scala-testCompile</id>
							<goals>
								<goal>testCompile</goal>
							</goals>
							<configuration>
								<jvmArgs>
									<jvmArg>-Xss100M</jvmArg>
								</jvmArgs>
								<args>
									<arg>-target:jvm-1.8</arg>
									<arg>-deprecation</arg>
									<arg>-feature</arg>
									<arg>-unchecked</arg>
									<arg>-language:implicitConversions</arg>
									<arg>-language:postfixOps</arg>
								</args>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<!-- 其他 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven-site-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
					<executions>
						<execution>
							<phase>generate-sources</phase>
							<goals>
								<goal>add-source</goal>
							</goals>
							<configuration>
								<sources>
									<source>
										${project.build.directory}/generated-sources/openapi/src/gen/java
									</source>
								</sources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>benchmarks</id>
							<phase>integration-test</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<classpathScope>test</classpathScope>
								<executable>java</executable>
								<arguments>
									<argument>-classpath</argument>
									<classpath />
									<argument>org.openjdk.jmh.Main</argument>
									<argument>.*</argument>
								</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- OpenAPI 生成工具 -->
				<plugin>
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<version>${openapi-generator-maven-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<inputSpec>
									${project.basedir}/src/main/resources/openapi.yaml
								</inputSpec>
								<generatorName>jaxrs-spec</generatorName>
								<configOptions>
									<dateLibrary>java8-localdatetime
									</dateLibrary>
									<java8>true</java8>
									<serializableModel>true</serializableModel>
									<interfaceOnly>true</interfaceOnly>
									<useSwaggerAnnotations>true
									</useSwaggerAnnotations>
								</configOptions>
								<apiPackage>
									${openapi-generator-maven-plugin.apiPackage}
								</apiPackage>
								<modelPackage>
									${openapi-generator-maven-plugin.modelPackage}
								</modelPackage>
								<supportingFilesToGenerate>ApiUtil.java
								</supportingFilesToGenerate>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- Protobuf 生成工具 -->
				<plugin>
					<groupId>org.xolstice.maven.plugins</groupId>
					<artifactId>protobuf-maven-plugin</artifactId>
					<version>${protobuf-maven-plugin.version}</version>
					<configuration>
						<protocArtifact>
							com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}
						</protocArtifact>
						<pluginId>grpc-java</pluginId>
						<pluginArtifact>
							io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}
						</pluginArtifact>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>compile-custom</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- Groovy 编译支持 -->
				<plugin>
					<groupId>org.codehaus.gmavenplus</groupId>
					<artifactId>gmavenplus-plugin</artifactId>
					<version>${gmavenplus-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>compile</goal>
								<goal>compileTests</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<properties>
				<spring.profiles.active>dev</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>test</id>
			<properties>
				<spring.profiles.active>test</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>staging</id>
			<properties>
				<spring.profiles.active>staging</spring.profiles.active>
			</properties>
		</profile>
		<profile>
			<id>prod</id>
			<properties>
				<spring.profiles.active>prod</spring.profiles.active>
			</properties>
		</profile>

		<profile>
			<id>code-review</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>unit-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.gmavenplus</groupId>
						<artifactId>gmavenplus-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>compile</goal>
									<goal>compileTests</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>false</skipTests>
							<useModulePath>false</useModulePath>
							<useFile>false</useFile>
							<parallel>methods</parallel>
							<threadCount>10</threadCount>
							<testFailureIgnore>true</testFailureIgnore>
							<includes>
								<include>**/*Test</include>
								<include>**/*Spec</include>
							</includes>
							<excludes>
								<exclude>**/*IT</exclude>
								<exclude>**/*ITCase</exclude>
							</excludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<executions>
							<execution>
								<id>site</id>
								<phase>test</phase>
								<goals>
									<goal>report-only</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<destFile>
								${project.build.directory}/jacoco-ut.exec
							</destFile>
							<dataFile>
								${project.build.directory}/jacoco-ut.exec
							</dataFile>
							<rules>
								<rule
									implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>　　
										<limit
											implementation="org.jacoco.report.check.Limit">
											<counter>METHOD</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.50</minimum>
										</limit>
										<limit
											implementation="org.jacoco.report.check.Limit">
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.50</minimum>
										</limit>
										<limit
											implementation="org.jacoco.report.check.Limit">
											<counter>CLASS</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
						<executions>
							<execution>
								<id>prepare-agent</id>
								<phase>generate-test-resources</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
							</execution>
							<execution>
								<id>report</id>
								<phase>test</phase>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
							<execution>
								<id>report-aggregate</id>
								<phase>verify</phase>
								<goals>
									<goal>report-aggregate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>integration-test</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.gmavenplus</groupId>
						<artifactId>gmavenplus-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>compile</goal>
									<goal>compileTests</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skipTests>true</skipTests>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<skipTests>false</skipTests>
							<useModulePath>false</useModulePath>
							<useFile>false</useFile>
							<parallel>methods</parallel>
							<threadCount>10</threadCount>
							<includes>
								<include>**/*IT</include>
								<include>**/*ITCase</include>
							</includes>
							<!--<excludes>
								<exclude>**/*Test</exclude>
								<exclude>**/*Spec</exclude>
							</excludes>-->
						</configuration>
						<executions>
							<execution>
								<id>integration</id>
								<phase>integration-test</phase>
								<goals>
									<goal>integration-test</goal>
								</goals>
							</execution>
							<execution>
								<id>verify</id>
								<phase>verify</phase>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.junit.jupiter</groupId>
								<artifactId>junit-jupiter-engine</artifactId>
								<version>${junit-jupiter-engine.version}</version>
							</dependency>
						</dependencies>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<executions>
							<execution>
								<id>report</id>
								<phase>site</phase>
								<goals>
									<goal>failsafe-report-only</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<configuration>
							<destFile>
								${project.build.directory}/jacoco-it.exec
							</destFile>
							<dataFile>
								${project.build.directory}/jacoco-it.exec
							</dataFile>
							<rules>
								<rule
									implementation="org.jacoco.maven.RuleConfiguration">
									<element>BUNDLE</element>
									<limits>　　
										<limit
											implementation="org.jacoco.report.check.Limit">
											<counter>METHOD</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.50</minimum>
										</limit>
										<limit
											implementation="org.jacoco.report.check.Limit">
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.50</minimum>
										</limit>
										<limit
											implementation="org.jacoco.report.check.Limit">
											<counter>CLASS</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
						<executions>
							<execution>
								<id>prepare-agent-integration</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>report-integration</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>report-integration</goal>
								</goals>
							</execution>
							<execution>
								<id>report-aggregate</id>
								<phase>verify</phase>
								<goals>
									<goal>report-aggregate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>assembly</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
