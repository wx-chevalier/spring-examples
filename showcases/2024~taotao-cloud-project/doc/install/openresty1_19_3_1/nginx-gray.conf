#user  nobody;
worker_processes  1;
#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;
#pid        logs/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       mime.types;
    default_type  application/octet-stream;
    #log_format  main '$time_local 客户端地址:$remote_addr–$remote_port 请求的URI和HTTP协议:$request 请求地址:$http_host HTTP请求状态:$status upstream状态:$upstream_status 负载地址:$upstream_addr url跳转来源:$http_referer $body_bytes_sent $http_user_agent $request_uri';
    log_format  logFormat '$group $time_local 客户端:$remote_addr–$remote_port 请求的URI和HTTP协议:$request 请求:$http_host HTTP状态:$status upstream状态:$upstream_status 负载:$upstream_addr
                          url跳转:$http_referer $body_bytes_sent $http_user_agent $request_uri 请求参数 $query_string $args $document_root $uri
                          -----$request_uri $request_filename $http_cookie';
    access_log  logs/access.log  logFormat;
    sendfile        on;
    #tcp_nopush     on;
    #keepalive_timeout  0;
    keepalive_timeout  65;
    #gzip  on;
    server {
        listen       80;   #监听端口
        server_name  域名; #监听地址
        access_log  logs/xx.com.access.log  logFormat;
        #方式二、nginx+lua实现灰度
        ## 1、将对localhost访问由/opt/app/lua/dep.lua进行处理
        ## 2、根据逻辑处理后，决定回调如下两个其中1个内部跳转
        #方式三根据请求参数值匹配进行路由
        #/policy/policyInfoList?thirdPolicystatus=2
        set $group "default";
        if ($query_string ~* "thirdPolicystatus=1"){ #动态控制路由
            set $group new_version;
        }
        if ($query_string ~* "thirdPolicystatus=2"){
            set $group old_version;
        }
        location /
        {
            default_type "text/html";
            #content_by_lua_file D:/sortware/openresty/openresty-1.17.8.2-win64/conf/dep.lua; # 指定由lua文件处理http请求
            proxy_pass http://$group;
            proxy_set_header  Host       $host;
            proxy_set_header  X-Real-IP    $remote_addr;
            proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
            index index.html index.htm;
        }
    }
	#标准预发环境
	upstream default {
		server ip:port;
	}
    #预发2
	upstream new_version {
		server ip:port;
	}
    #预发3
	upstream old_version {
		server ip:port;
	}
}
