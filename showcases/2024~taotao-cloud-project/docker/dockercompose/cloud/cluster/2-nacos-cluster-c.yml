  mysql –uroot –p
    
    create database `taotao-cloud-nacos-2.1.0`;
    use `taotao-cloud-nacos-2.1.0`;
    source /opt/cloud/nacos/conf/nacos-mysql.sql

  version: '3.7'
  services:
    nacos1:
      image: nacos/nacos-server
      restart: always
      hostname: nacos1
      container_name: nacos1
      privileged: true
      ports:
        - "8846:8848"
      environment:
        MODE: cluster
        PREFER_HOST_MODE: hostname
        NACOS_APPLICATION_PORT: 8848
        NACOS_SERVERS: nacos1:8848,nacos2:8848,nacos3:8848
        SPRING_DATASOURCE_PLATFORM: mysql
        MYSQL_SERVICE_HOST: 192.168.10.200
        MYSQL_SERVICE_PORT: 3316
        MYSQL_SERVICE_USER: root
        MYSQL_SERVICE_PASSWORD: 123456
        MYSQL_SERVICE_DB_NAME: taotao-cloud-nacos
        JVM_XMS: 256m
        JVM_XMX: 512m
      networks:
        kafka-cluster-network:
          ipv4_address: 172.11.0.100
    nacos2:
      image: nacos/nacos-server
      restart: always
      hostname: nacos2
      container_name: nacos2
      privileged: true
      ports:
        - "8847:8848"
      environment:
        MODE: cluster
        NACOS_APPLICATION_PORT: 8848
        PREFER_HOST_MODE: hostname
        NACOS_SERVERS: nacos1:8848,nacos2:8848,nacos3:8848
        SPRING_DATASOURCE_PLATFORM: mysql
        MYSQL_SERVICE_HOST: 192.168.10.200
        MYSQL_SERVICE_PORT: 3316
        MYSQL_SERVICE_USER: root
        MYSQL_SERVICE_PASSWORD: 123456
        MYSQL_SERVICE_DB_NAME: taotao-cloud-nacos
        JVM_XMS: 256m
        JVM_XMX: 512m
      networks:
        kafka-cluster-network:
          ipv4_address: 172.11.0.101
    nacos3:
      image: nacos/nacos-server
      restart: always
      hostname: nacos3
      container_name: nacos3
      privileged: true
      ports:
        - "8848:8848"
      environment:
        MODE: cluster
        NACOS_APPLICATION_PORT: 8848
        PREFER_HOST_MODE: hostname
        NACOS_SERVERS: nacos1:8848,nacos2:8848,nacos3:8848
        SPRING_DATASOURCE_PLATFORM: mysql
        MYSQL_SERVICE_HOST: 192.168.10.200
        MYSQL_SERVICE_PORT: 3316
        MYSQL_SERVICE_USER: root
        MYSQL_SERVICE_PASSWORD: 123456
        MYSQL_SERVICE_DB_NAME: taotao-cloud-nacos
        JVM_XMS: 256m
        JVM_XMX: 512m
      networks:
        kafka-cluster-network:
          ipv4_address: 172.11.0.102

    nacos-nginx:
      image: nginx
      restart: always
      container_name: nacos-nginx
      ports:
        - "8000:80"
      volumes:
        - /root/config.d:/etc/nginx/conf.d
      networks:
        kafka-cluster-network:
          ipv4_address: 172.11.0.103

  networks:
    kafka-cluster-network:
      external:
        name: kafka-cluster-network

    #########
    #nginx.conf
    
    user  nginx;
    worker_processes  1;
    
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    worker_rlimit_nofile 65535;
    
    events {
    use epoll;
    worker_connections  1024;
    multi_accept on;
  }


    http {
    
    
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log  /var/log/nginx/access.log  main;
    client_header_buffer_size 4k;
    large_client_header_buffers 8 128k;
    sendfile        on;
    tcp_nopush     on;
    keepalive_timeout  60;
    tcp_nodelay on;
    open_file_cache max=65535 inactive=60s;
    open_file_cache_valid 80s;
    open_file_cache_min_uses 1;
    
    
    #FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。
    fastcgi_connect_timeout 300;
    fastcgi_send_timeout 300;
    fastcgi_read_timeout 300;
    fastcgi_buffer_size 64k;
    fastcgi_buffers 4 64k;
    fastcgi_busy_buffers_size 128k;
    fastcgi_temp_file_write_size 128k;
    
    gzip  on;
    gzip_min_length 1024;
    gzip_buffers 4 4k;
    gzip_comp_level 2;
    gzip_types text/plain application/x-javascript text/css application/xml;
    gzip_vary on;
    include /etc/nginx/conf.d/*.conf;
  }

    stream{
    include /etc/nginx/conf.d/*.stream;
  }

  #/conf/nginx8848.conf
  # 添加负载均衡配置
    upstream nacos {
    server ip:8845 weight=1 max_fails=2 fail_timeout=10s;
    server ip:8846 weight=1 max_fails=2 fail_timeout=10s;
    server ip:8847 weight=1 max_fails=2 fail_timeout=10s;
  }

    server {
    listen       8848;
    listen  [::]:8848;
    # 修改为宿主机的 IP地址
    server_name  default;
    
    # To allow special characters in headers
    ignore_invalid_headers off;
    # Allow any size file to be uploaded.
    # Set to a value such as 1000m; to restrict file size to a specific value
    client_max_body_size 0;
    # To disable buffering
    proxy_buffering off;
    proxy_request_buffering off;
    
    location / {
    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    proxy_connect_timeout 300;
    # Default is HTTP/1, keepalive is only enabled in HTTP/1.1
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    chunked_transfer_encoding off;
    
    # 添加代理配置
    proxy_pass http://nacos;
  }
  }

  #/conf/nginx9848.stream
  # 添加负载均衡配置
    upstream nacoss {
    server ip:9845 weight=1 max_fails=2 fail_timeout=10s;
    server ip:9846 weight=1 max_fails=2 fail_timeout=10s;
    server ip:9847 weight=1 max_fails=2 fail_timeout=10s;
  }

    server {
    listen       9848;
    proxy_pass nacoss;
  }

  #nginx9849.stream
  # 添加负载均衡配置
    upstream nacosss {
    server ip:9841 weight=1 max_fails=2 fail_timeout=10s;
    server ip:9842 weight=1 max_fails=2 fail_timeout=10s;
    server ip:9843 weight=1 max_fails=2 fail_timeout=10s;
  }

    server {
    listen       9849;
    proxy_pass nacosss;
  }

