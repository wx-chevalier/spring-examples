dependencies {
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-client")
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-cluster")
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-common")
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-core")
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-filter")
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-metrics")
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-plugin")
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-registry")
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-serialization")
    api project(":taotao-cloud-rpc:taotao-cloud-rpc-server")
}

task releaseTarZip(type: Zip, dependsOn: jar) {

    archiveFileName = "${project.name}.zip"

    from("${project.parent.projectDir}/taotao-cloud-rpc-distribution/bin") {
        include '**'

        into "bin"
    }

    from("${project.parent.projectDir}/taotao-cloud-rpc-distribution/conf") {
        include '**'

        into "conf"
    }

    from "${project.parent.projectDir}/taotao-cloud-rpc-distribution/LICENSE-BIN" rename {String filename -> filename.replace("-BIN", "")}
    from "${project.parent.projectDir}/taotao-cloud-rpc-distribution/NOTICE-BIN" rename {String filename -> filename.replace("-BIN", "")}

    from('build/libs') {
        include '*.jar'

        into "target"
    }

}

tasks.create(name: "releaseTarGz", dependsOn: configurations.archives.artifacts, type: Tar) {

    into "taotao-cloud-rpc-dashboard"
    compression = Compression.GZIP
    archiveExtension = 'tar.gz'

    from("${project.parent.projectDir}/taotao-cloud-rpc-distribution/bin") {
        include '**'

        into "bin"
    }

    from("${project.parent.projectDir}/taotao-cloud-rpc-distribution/conf") {
        include '**'

        into "conf"
    }

    from "${project.parent.projectDir}/taotao-cloud-rpc-distribution/LICENSE-BIN" rename {String filename -> filename.replace("-BIN", "")}
    from "${project.parent.projectDir}/taotao-cloud-rpc-distribution/NOTICE-BIN" rename {String filename -> filename.replace("-BIN", "")}

    from('build/libs') {
        include '*.jar'

        into "target"
    }

//    from(project.file("$rootDir/bin")) { into "bin/" }
//    from(project.file("$rootDir/config")) { into "config/" }
//    from(project.file("$rootDir/licenses")) { into "licenses/" }
//    from "$rootDir/LICENSE-binary" rename {String filename -> filename.replace("-binary", "")}
//    from "$rootDir/NOTICE-binary" rename {String filename -> filename.replace("-binary", "")}
//    from(configurations.runtimeClasspath) { into("libs/") }
//    from(configurations.archives.artifacts.files) { into("libs/") }
//    from(project.siteDocsTar) { into("site-docs/") }
//    from(project(':tools').jar) { into("libs/") }
//    from(project(':tools').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':trogdor').jar) { into("libs/") }
//    from(project(':trogdor').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':shell').jar) { into("libs/") }
//    from(project(':shell').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':connect:api').jar) { into("libs/") }
//    from(project(':connect:api').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':connect:runtime').jar) { into("libs/") }
//    from(project(':connect:runtime').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':connect:transforms').jar) { into("libs/") }
//    from(project(':connect:transforms').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':connect:json').jar) { into("libs/") }
//    from(project(':connect:json').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':connect:file').jar) { into("libs/") }
//    from(project(':connect:file').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':connect:basic-auth-extension').jar) { into("libs/") }
//    from(project(':connect:basic-auth-extension').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':connect:mirror').jar) { into("libs/") }
//    from(project(':connect:mirror').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':connect:mirror-client').jar) { into("libs/") }
//    from(project(':connect:mirror-client').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':streams').jar) { into("libs/") }
//    from(project(':streams').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':streams:streams-scala').jar) { into("libs/") }
//    from(project(':streams:streams-scala').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':streams:test-utils').jar) { into("libs/") }
//    from(project(':streams:test-utils').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':streams:examples').jar) { into("libs/") }
//    from(project(':streams:examples').configurations.runtimeClasspath) { into("libs/") }
//    from(project(':tools:tools-api').jar) { into("libs/") }
//    from(project(':tools:tools-api').configurations.runtimeClasspath) { into("libs/") }
    duplicatesStrategy 'exclude'
}
